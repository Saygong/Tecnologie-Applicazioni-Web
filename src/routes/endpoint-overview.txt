

POST is always for creating a resource ( does not matter if it was duplicated )
PUT is for checking if resource exists then update, else create new resource
PATCH is always for updating a resource



Endpoints                               Method     Description


/users                                  GET         Returns a list of all the users, better if ordered by elo desc (useful for showing the scoreboard)

/users                          C       POST        Add a new user in the database using request body data
/users/:userId                  R       GET         Return the user who matches with the userId
/users/:userId                  U       PATCH       Update a particular user with request body data
/users/:userId                  D       DELETE      Delete the user with id == userId

/users/:userId/stats                    GET
/users/:userId/stats                    PATCH

/users/:userId/chats                    GET
/users/:userId/chats                    PATCH

/users/:userId/friends                  GET
/users/:userId/friends                  PATCH

/users/:userId/roles                    GET
/users/:userId/roles                    PATCH



/matches                        C       POST        Create a new match
/matches/:matchId               R       GET         Return the match identified by matchId
/matches/:matchId               U       PATCH       Update information about a particular match
/matches/:matchId               D       DELETE      Delete the match identified by matchId

/matches/:matchId/stats                 GET
/matches/:matchId/stats                 PATCH


/chats                          C      POST       Create a new chat
/chats/:chatId                  R      GET        Return the chat identified by chatId
/chats/:chatId                  U      PATCH      Update the chat identified by chatId
/chats/:chatId                  D      DELETE     Delete a chat by ID

/chats/:chatId/messages                GET        
/chats/:chatId/messages                PATCH      


